// Copyright (c) ZeroC, Inc.

// slice2cpp version 3.8.0-alpha.0
// <auto-generated>Generated from Slice file 'SSLInfo.ice'.</auto-generated>
// clang-format off

#ifndef Glacier2_SSLInfo_h_
#define Glacier2_SSLInfo_h_

#include <Ice/PushDisableWarnings.h>
#include <Ice/Ice.h>
#include <Ice/BuiltinSequences.h>
#include <Glacier2/Config.h>

#ifndef ICE_DISABLE_VERSION
#   if ICE_INT_VERSION  != 30850
#       error Ice version mismatch: an exact match is required for beta generated code
#   endif
#endif

#ifndef GLACIER2_API
#   if defined(GLACIER2_API_EXPORTS)
#       define GLACIER2_API ICE_DECLSPEC_EXPORT
#   else
#       define GLACIER2_API ICE_DECLSPEC_IMPORT
#   endif
#endif

// NOLINTBEGIN(modernize-concat-nested-namespaces)

namespace Glacier2
{
    struct SSLInfo;
}

namespace Glacier2
{
    /// Represents information gathered from an incoming SSL connection and used for authentication and authorization.
    /// @see SSLPermissionsVerifier
    /// @headerfile Glacier2/Glacier2.h
    struct SSLInfo
    {
        /// The remote host.
        std::string remoteHost;

        /// The remote port.
        std::int32_t remotePort;

        /// The router's host.
        std::string localHost;

        /// The router's port.
        std::int32_t localPort;

        /// The negotiated cipher suite.
        std::string cipher;

        /// The certificate chain.
        ::Ice::StringSeq certs;

        /// Creates a tuple with all the fields of this struct.
        /// @return A tuple with all the fields of this struct.
        [[nodiscard]] std::tuple<const std::string&, const std::int32_t&, const std::string&, const std::int32_t&, const std::string&, const ::Ice::StringSeq&> ice_tuple() const
        {
            return std::tie(remoteHost, remotePort, localHost, localPort, cipher, certs);
        }

        /// Outputs the name and value of each field of this instance to the stream.
        /// @param os The output stream.
        GLACIER2_API void ice_printFields(std::ostream& os) const;
    };

    /// Outputs the description of a SSLInfo to a stream, including all its fields.
    /// @param os The output stream.
    /// @param value The instance to output.
    /// @return The output stream.
    GLACIER2_API std::ostream& operator<<(std::ostream& os, const SSLInfo& value);

    /// @cond INTERNAL
    using Ice::Tuple::operator<;
    using Ice::Tuple::operator<=;
    using Ice::Tuple::operator>;
    using Ice::Tuple::operator>=;
    using Ice::Tuple::operator==;
    using Ice::Tuple::operator!=;
    /// @endcond
}

namespace Ice
{
    /// @cond INTERNAL
    template<>
    struct StreamableTraits<::Glacier2::SSLInfo>
    {
        static constexpr StreamHelperCategory helper = StreamHelperCategoryStruct;
        static constexpr int minWireSize = 12;
        static constexpr bool fixedLength = false;
    };

    template<>
    struct StreamReader<::Glacier2::SSLInfo>
    {
        /// Unmarshals a ::Glacier2::SSLInfo from the input stream.
        static void read(InputStream* istr, ::Glacier2::SSLInfo& v)
        {
            istr->readAll(v.remoteHost, v.remotePort, v.localHost, v.localPort, v.cipher, v.certs);
        }
    };
    /// @endcond
}

// NOLINTEND(modernize-concat-nested-namespaces)

#include <Ice/PopDisableWarnings.h>
#endif
